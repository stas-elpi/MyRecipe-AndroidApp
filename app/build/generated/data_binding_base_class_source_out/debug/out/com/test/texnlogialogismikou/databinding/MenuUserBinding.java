// Generated by view binder compiler. Do not edit!
package com.test.texnlogialogismikou.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.test.texnlogialogismikou.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class MenuUserBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final TextView label1;

  @NonNull
  public final TextView label2;

  @NonNull
  public final TextView label3;

  @NonNull
  public final TextView label4;

  @NonNull
  public final TextView label5;

  @NonNull
  public final TextView label6;

  @NonNull
  public final TextView recommended;

  @NonNull
  public final ImageView search;

  @NonNull
  public final ImageView search2;

  @NonNull
  public final TextView signin;

  @NonNull
  public final LinearLayout socialicons;

  private MenuUserBinding(@NonNull RelativeLayout rootView, @NonNull TextView label1,
      @NonNull TextView label2, @NonNull TextView label3, @NonNull TextView label4,
      @NonNull TextView label5, @NonNull TextView label6, @NonNull TextView recommended,
      @NonNull ImageView search, @NonNull ImageView search2, @NonNull TextView signin,
      @NonNull LinearLayout socialicons) {
    this.rootView = rootView;
    this.label1 = label1;
    this.label2 = label2;
    this.label3 = label3;
    this.label4 = label4;
    this.label5 = label5;
    this.label6 = label6;
    this.recommended = recommended;
    this.search = search;
    this.search2 = search2;
    this.signin = signin;
    this.socialicons = socialicons;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static MenuUserBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static MenuUserBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.menu_user, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static MenuUserBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.label1;
      TextView label1 = ViewBindings.findChildViewById(rootView, id);
      if (label1 == null) {
        break missingId;
      }

      id = R.id.label2;
      TextView label2 = ViewBindings.findChildViewById(rootView, id);
      if (label2 == null) {
        break missingId;
      }

      id = R.id.label3;
      TextView label3 = ViewBindings.findChildViewById(rootView, id);
      if (label3 == null) {
        break missingId;
      }

      id = R.id.label4;
      TextView label4 = ViewBindings.findChildViewById(rootView, id);
      if (label4 == null) {
        break missingId;
      }

      id = R.id.label5;
      TextView label5 = ViewBindings.findChildViewById(rootView, id);
      if (label5 == null) {
        break missingId;
      }

      id = R.id.label6;
      TextView label6 = ViewBindings.findChildViewById(rootView, id);
      if (label6 == null) {
        break missingId;
      }

      id = R.id.recommended;
      TextView recommended = ViewBindings.findChildViewById(rootView, id);
      if (recommended == null) {
        break missingId;
      }

      id = R.id.search;
      ImageView search = ViewBindings.findChildViewById(rootView, id);
      if (search == null) {
        break missingId;
      }

      id = R.id.search2;
      ImageView search2 = ViewBindings.findChildViewById(rootView, id);
      if (search2 == null) {
        break missingId;
      }

      id = R.id.signin;
      TextView signin = ViewBindings.findChildViewById(rootView, id);
      if (signin == null) {
        break missingId;
      }

      id = R.id.socialicons;
      LinearLayout socialicons = ViewBindings.findChildViewById(rootView, id);
      if (socialicons == null) {
        break missingId;
      }

      return new MenuUserBinding((RelativeLayout) rootView, label1, label2, label3, label4, label5,
          label6, recommended, search, search2, signin, socialicons);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
